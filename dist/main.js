(()=>{"use strict";var r={426:(r,n,e)=>{e.d(n,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([r.id,"/* RESET*/\r\n/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video, textarea {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n\r\n/* MAIN */\r\n\r\n:root {\r\n    --highlight-color: rgb(29, 0, 49);\r\n}\r\n\r\n::selection {\r\n    background: var(--highlight-color);\r\n    color: white; /* WebKit/Blink Browsers */\r\n  }\r\n  ::-moz-selection {\r\n    background: var(--highlight-color);\r\n    color: white;\r\n  }\r\n\r\nhtml, body, main, main .editor {\r\n    height: 100%;\r\n    overflow: hidden;\r\n    scrollbar-width: thin;\r\n    font-family: 'Mukta', sans-serif;\r\n}\r\n\r\nmain {\r\n    background-color: rgb(255, 214, 161);\r\n}\r\n\r\n#ui {\r\n    display: grid;\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 1fr 5fr;\r\n}\r\n\r\n.editor {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n    grid-column: 2/3;\r\n    grid-row: 1/2;\r\n}\r\n\r\n.boundbox {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid black;\r\n}\r\n\r\n textarea {\r\n    color: rgb(0, 0, 0);\r\n    font-weight: 400;\r\n    height: 100%;\r\n    width: 100%;\r\n    resize: none;\r\n    border-style: none; \r\n    border-color: Transparent;\r\n    outline: none;\r\n    padding: 1rem;\r\n    font-size: 2.5rem;\r\n    font-family: 'Mukta', sans-serif;\r\n    line-height: 3rem;\r\n}\r\n\r\nmain > .sidebar, main .editor > textarea {\r\n    box-sizing: border-box;\r\n    /* border-radius: 10px; */\r\n    border: 0.4px solid black;\r\n}\r\n\r\nmain .sidebar {\r\n    grid-column: 1/2;\r\n    grid-row: 1/2;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.2rem;\r\n    padding: 0 1rem;\r\n    overflow-y:auto;\r\n}\r\n\r\nmain .sidebar .todo {\r\n    height: 1rem;\r\n    background-color: aqua;\r\n    padding: 0.3rem;\r\n    border-radius: 4px;\r\n}\r\n\r\n\r\n::placeholder {\r\n    color: rgb(255, 69, 109);\r\n    font-size: 2rem;\r\n}\r\n\r\n.close-btn {\r\n    height: 15px;\r\n    width: 15px;\r\n    border-radius: 333rem;\r\n    background-color: rgba(255, 0, 0, 30%);\r\n    position: absolute;\r\n    top: 1%;\r\n    margin-left: 5px;\r\n}\r\n\r\n.close-btn:hover {\r\n    transition: 0.4s;\r\n    background-color: rgba(255, 0, 0, 100%);\r\n}\r\n\r\n.new-btn {\r\n    height: 2rem;\r\n    width: 5rem;\r\n    background-color: blue;\r\n    border-radius: 44rem;\r\n    position: absolute;\r\n    bottom: 1%;\r\n    margin-left: 4rem;\r\n}\r\n\r\n.popup {\r\n    position: fixed;\r\n    z-index: 500;\r\n    height: 300px;\r\n    width: 300px;\r\n    background-color: grey;\r\n    border-radius: 1rem;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n    visibility: hidden;\r\n}\r\n\r\n.visible {\r\n    visibility: visible;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,SAAS;AACT;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;;AAGA,SAAS;;AAET;IACI,iCAAiC;AACrC;;AAEA;IACI,kCAAkC;IAClC,YAAY,EAAE,0BAA0B;EAC1C;EACA;IACE,kCAAkC;IAClC,YAAY;EACd;;AAEF;IACI,YAAY;IACZ,gBAAgB;IAChB,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;IACP,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,uBAAuB;AAC3B;;CAEC;IACG,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,iBAAiB;IACjB,gCAAgC;IAChC,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,eAAe;IACf,kBAAkB;AACtB;;;AAGA;IACI,wBAAwB;IACxB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,sCAAsC;IACtC,kBAAkB;IAClB,OAAO;IACP,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,oBAAoB;IACpB,kBAAkB;IAClB,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;IACR,UAAU;IACV,+BAA+B;IAC/B,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:["/* RESET*/\r\n/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video, textarea {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n\r\n/* MAIN */\r\n\r\n:root {\r\n    --highlight-color: rgb(29, 0, 49);\r\n}\r\n\r\n::selection {\r\n    background: var(--highlight-color);\r\n    color: white; /* WebKit/Blink Browsers */\r\n  }\r\n  ::-moz-selection {\r\n    background: var(--highlight-color);\r\n    color: white;\r\n  }\r\n\r\nhtml, body, main, main .editor {\r\n    height: 100%;\r\n    overflow: hidden;\r\n    scrollbar-width: thin;\r\n    font-family: 'Mukta', sans-serif;\r\n}\r\n\r\nmain {\r\n    background-color: rgb(255, 214, 161);\r\n}\r\n\r\n#ui {\r\n    display: grid;\r\n    grid-template-rows: 1fr;\r\n    grid-template-columns: 1fr 5fr;\r\n}\r\n\r\n.editor {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n    grid-column: 2/3;\r\n    grid-row: 1/2;\r\n}\r\n\r\n.boundbox {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid black;\r\n}\r\n\r\n textarea {\r\n    color: rgb(0, 0, 0);\r\n    font-weight: 400;\r\n    height: 100%;\r\n    width: 100%;\r\n    resize: none;\r\n    border-style: none; \r\n    border-color: Transparent;\r\n    outline: none;\r\n    padding: 1rem;\r\n    font-size: 2.5rem;\r\n    font-family: 'Mukta', sans-serif;\r\n    line-height: 3rem;\r\n}\r\n\r\nmain > .sidebar, main .editor > textarea {\r\n    box-sizing: border-box;\r\n    /* border-radius: 10px; */\r\n    border: 0.4px solid black;\r\n}\r\n\r\nmain .sidebar {\r\n    grid-column: 1/2;\r\n    grid-row: 1/2;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.2rem;\r\n    padding: 0 1rem;\r\n    overflow-y:auto;\r\n}\r\n\r\nmain .sidebar .todo {\r\n    height: 1rem;\r\n    background-color: aqua;\r\n    padding: 0.3rem;\r\n    border-radius: 4px;\r\n}\r\n\r\n\r\n::placeholder {\r\n    color: rgb(255, 69, 109);\r\n    font-size: 2rem;\r\n}\r\n\r\n.close-btn {\r\n    height: 15px;\r\n    width: 15px;\r\n    border-radius: 333rem;\r\n    background-color: rgba(255, 0, 0, 30%);\r\n    position: absolute;\r\n    top: 1%;\r\n    margin-left: 5px;\r\n}\r\n\r\n.close-btn:hover {\r\n    transition: 0.4s;\r\n    background-color: rgba(255, 0, 0, 100%);\r\n}\r\n\r\n.new-btn {\r\n    height: 2rem;\r\n    width: 5rem;\r\n    background-color: blue;\r\n    border-radius: 44rem;\r\n    position: absolute;\r\n    bottom: 1%;\r\n    margin-left: 4rem;\r\n}\r\n\r\n.popup {\r\n    position: fixed;\r\n    z-index: 500;\r\n    height: 300px;\r\n    width: 300px;\r\n    background-color: grey;\r\n    border-radius: 1rem;\r\n    top: 50%;\r\n    right: 50%;\r\n    transform: translate(50%, -50%);\r\n    visibility: hidden;\r\n}\r\n\r\n.visible {\r\n    visibility: visible;\r\n}\r\n"],sourceRoot:""}]);const A=a},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var d=0;d<r.length;d++){var c=[].concat(r[d]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var i={},a=[],A=0;A<r.length;A++){var s=r[A],d=t.base?s[0]+t.base:s[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var u=e(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var b=o(p,t);t.byIndex=A,n.splice(A,0,{identifier:l,updater:b,references:1})}a.push(l)}return a}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var i=t(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var A=e(i[a]);n[A].references--}for(var s=t(r,o),d=0;d<i.length;d++){var c=e(i[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=s}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t](i,i.exports,e),i.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),o=e.n(t),i=e(569),a=e.n(i),A=e(565),s=e.n(A),d=e(216),c=e.n(d),l=e(589),u=e.n(l),p=e(426),b={};function C(r){return!!document.querySelector(r)}b.styleTagTransform=u(),b.setAttributes=s(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=c(),n()(p.Z,b),p.Z&&p.Z.locals&&p.Z.locals;const m=function(){return"The name of the project already exists."},f=(()=>{const r=[],n=n=>r.filter((r=>r.title===n)).length>1;return{Create:(e,t,o,i,a="")=>{const A=((r,n,e,t,o="")=>({title:r,description:n,dueDate:e,priority:t,getTitle:()=>r,text:o,addText:function(r){return o=r}}))(e,t,o,i,a);var s;if(!n(A.title))return s=A,r.push(s),console.table(r),A;console.alert(m)},checkForDuplicate:n}})(),h=(()=>{const r=(r,n)=>({id:r,text:n}),n=[];function e(r){return document.querySelector(`div.boundbox#${r}`).remove()}function t(t){const o=document.createElement("textarea");o.value=function(r){for(let e=0;e<n.length;e+=1)if(n[e].id===r)return n[e].text;return""}(t);const i=function(r){const n=document.createElement("div");return n.classList.add("boundbox"),n.setAttribute("id",r),n}(t);i.appendChild(o);const a=function(t){const o=document.createElement("div");return o.classList.add("close-btn"),o.setAttribute("id",t),o.addEventListener("click",(o=>{const i=r(o.target.id,function(r){const n=document.querySelector(`div.boundbox#${r} textarea`);return void 0===n.value?"":n.value}(t));n.push(i),console.log(n),e(o.target.id)})),o}(t);return i.appendChild(a),i}const o=()=>{const r=document.createElement("main");if(r.setAttribute("id","ui"),r.appendChild(function(){const r=document.createElement("div");return r.classList.add("popup"),r}()),C(".sidebar")||r.appendChild(function(){const r=document.createElement("div");return r.classList.add("sidebar"),r.appendChild(function(){const r=document.createElement("div");return r.classList.add("new-btn"),r.addEventListener("click",(()=>{document.querySelector(".popup").classList.toggle("visible")})),r}()),r}()),!C(".editor")){const n=function(){const r=document.createElement("div");return r.classList.add("editor"),r}();r.appendChild(n)}return r};return{initialisePage:()=>{const r=document.querySelector("body");return r.appendChild(o()),r},newtextArea:r=>{const n=document.querySelector(".editor"),e=t(r);return n.appendChild(e),n},removeTextArea:e}})(),g=f.Create("Jim Todo","Blah blah","soon",1),B=f.Create("Bob","Bob Description","soon",2);function v(r){const n=document.querySelector(".sidebar"),e=document.createElement("div");return e.classList.add("todo"),e.setAttribute("id",r.replace(/\s/g,"")),e.textContent=r,n.appendChild(e),e.addEventListener("click",(r=>{document.querySelector(`div.boundbox#${r.target.id}`)||h.newtextArea(r.target.id)})),n}h.initialisePage(),v(g.title),v(B.title)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,