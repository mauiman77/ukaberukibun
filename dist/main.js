(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"/* RESET*/\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, textarea {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n/* MAIN */\n\n:root {\n    --highlight-color: rgb(147, 6, 248);\n}\n\n::selection {\n    background: var(--highlight-color); /* WebKit/Blink Browsers */\n  }\n  ::-moz-selection {\n    background: var(--highlight-color);\n    color: white;\n  }\n\nhtml, body, main, main .editor {\n    height: 100%;\n    overflow: hidden;\n    scrollbar-width: thin;\n    font-family: 'Mukta', sans-serif;\n}\n\nmain {\n    background-color: rgb(255, 214, 161);\n}\n\n#ui {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 1fr 5fr;\n}\n\nmain .editor {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    grid-column: 2/3;\n    grid-row: 1/2;\n}\n\nmain .editor > textarea {\n    color: rgb(0, 0, 0);\n    font-weight: 400;\n    height: 100%;\n    width: 100%;\n    resize: none;\n    border-style: none; \n    border-color: Transparent;\n    outline: none;\n    padding: 1rem;\n    font-size: 2.5rem;\n    font-family: 'Mukta', sans-serif;\n    line-height: 3rem;\n}\n\nmain > .sidebar, main .editor > textarea {\n    box-sizing: border-box;\n    /* border-radius: 10px; */\n    border: 0.4px solid black;\n}\n\nmain .sidebar {\n    grid-column: 1/2;\n    grid-row: 1/2;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n    padding: 0 1rem;\n    overflow-y:auto;\n}\n\nmain .sidebar .project {\n    height: 1rem;\n    background-color: aqua;\n    padding: 0.3rem;\n    border-radius: 4px;\n}\n\n\n/* main .editor > textarea {\n    box-sizing: border-box;\n    height: 20rem;\n    width: 20rem;\n    border-style: none; \n    border-color: Transparent;\n    outline: none;\n    padding: 1rem;\n    border-radius: 10px;\n    font-size: 2.5rem;\n    font-family: 'Fresca', sans-serif;\n    border: 2px solid black;\n    line-height: 3rem;\n} */\n\n\n::placeholder {\n    color: rgb(255, 69, 109);\n    font-size: 2rem;\n}\n\n.toolbox-safearea {\n    height: 2.5rem;\n    width: 2.5rem;\n    position: fixed;\n}\n\n.toolbox {\n    height: 2rem;\n    width: 20rem;\n    position: fixed;\n    background-color: #cf1351;\n    border-radius: 0.2rem;\n    top: 1rem;\n    left: -19rem;\n    overflow: hidden;\n    transition: 0.2s;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,SAAS;AACT;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;;AAGA,SAAS;;AAET;IACI,mCAAmC;AACvC;;AAEA;IACI,kCAAkC,EAAE,0BAA0B;EAChE;EACA;IACE,kCAAkC;IAClC,YAAY;EACd;;AAEF;IACI,YAAY;IACZ,gBAAgB;IAChB,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,OAAO;IACP,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,iBAAiB;IACjB,gCAAgC;IAChC,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,eAAe;IACf,kBAAkB;AACtB;;;AAGA;;;;;;;;;;;;;GAaG;;;AAGH;IACI,wBAAwB;IACxB,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,yBAAyB;IACzB,qBAAqB;IACrB,SAAS;IACT,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;AACpB",sourcesContent:["/* RESET*/\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, textarea {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n\n/* MAIN */\n\n:root {\n    --highlight-color: rgb(147, 6, 248);\n}\n\n::selection {\n    background: var(--highlight-color); /* WebKit/Blink Browsers */\n  }\n  ::-moz-selection {\n    background: var(--highlight-color);\n    color: white;\n  }\n\nhtml, body, main, main .editor {\n    height: 100%;\n    overflow: hidden;\n    scrollbar-width: thin;\n    font-family: 'Mukta', sans-serif;\n}\n\nmain {\n    background-color: rgb(255, 214, 161);\n}\n\n#ui {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 1fr 5fr;\n}\n\nmain .editor {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n    grid-column: 2/3;\n    grid-row: 1/2;\n}\n\nmain .editor > textarea {\n    color: rgb(0, 0, 0);\n    font-weight: 400;\n    height: 100%;\n    width: 100%;\n    resize: none;\n    border-style: none; \n    border-color: Transparent;\n    outline: none;\n    padding: 1rem;\n    font-size: 2.5rem;\n    font-family: 'Mukta', sans-serif;\n    line-height: 3rem;\n}\n\nmain > .sidebar, main .editor > textarea {\n    box-sizing: border-box;\n    /* border-radius: 10px; */\n    border: 0.4px solid black;\n}\n\nmain .sidebar {\n    grid-column: 1/2;\n    grid-row: 1/2;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    gap: 0.2rem;\n    padding: 0 1rem;\n    overflow-y:auto;\n}\n\nmain .sidebar .project {\n    height: 1rem;\n    background-color: aqua;\n    padding: 0.3rem;\n    border-radius: 4px;\n}\n\n\n/* main .editor > textarea {\n    box-sizing: border-box;\n    height: 20rem;\n    width: 20rem;\n    border-style: none; \n    border-color: Transparent;\n    outline: none;\n    padding: 1rem;\n    border-radius: 10px;\n    font-size: 2.5rem;\n    font-family: 'Fresca', sans-serif;\n    border: 2px solid black;\n    line-height: 3rem;\n} */\n\n\n::placeholder {\n    color: rgb(255, 69, 109);\n    font-size: 2rem;\n}\n\n.toolbox-safearea {\n    height: 2.5rem;\n    width: 2.5rem;\n    position: fixed;\n}\n\n.toolbox {\n    height: 2rem;\n    width: 20rem;\n    position: fixed;\n    background-color: #cf1351;\n    border-radius: 0.2rem;\n    top: 1rem;\n    left: -19rem;\n    overflow: hidden;\n    transition: 0.2s;\n}\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],d=r.base?s[0]+r.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var u=t(c),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:c,updater:m,references:1})}a.push(c)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=r(n,o),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),s=t.n(A),d=t(216),l=t.n(d),c=t(589),u=t.n(c),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=function(n){return!!document.querySelector(n)},h=(()=>{function n(){return document.createElement("textarea")}return{initialisePage:()=>{const e=document.querySelector("body");return e.appendChild((()=>{const e=document.createElement("main");if(e.setAttribute("id","ui"),f(".sidebar")||e.appendChild(function(){const n=document.createElement("div");return n.classList.add("sidebar"),n}()),!f(".editor")){const t=function(){const n=document.createElement("div");return n.classList.add("editor"),n}();t.appendChild(n()),e.appendChild(t)}return e})()),e},newtextArea:()=>{const e=document.querySelector(".editor");return e.appendChild(n()),e}}})(),b=function(){return"The name of the project already exists."},C=(()=>{const n=[],e=e=>n.filter((n=>n.title===e)).length>1;return{Create:(t,r,o,i,a)=>{const A=((n,e,t,r,o=[])=>({title:n,description:e,dueDate:t,priority:r,getTitle:()=>n,todo:o}))(t,r,o,i,a);var s;if(!e(A.title))return s=A,n.push(s),console.table(n),A;console.alert(b)},checkForDuplicate:e}})(),g=C.Create("JimProject","Blah blah","soon",1),B=C.Create("BrianProject","Blah blah","soon",1),y=C.Create("DesmondProject","Blah blah","soon",1),v=C.Create("DesmondProject","Blah blah","soon",1),I=[g,B,y,v];console.log(C.checkForDuplicate(v.title)),h.initialisePage(),function(n){const e=document.querySelector(".sidebar"),t=document.createElement("div");t.classList.add("project"),t.textContent=n,e.appendChild(t)}(I[Math.floor(Math.random()*I.length)].getTitle())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,